$date
	Fri Feb  5 21:16:36 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 ! \iram[0] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 " \iram[1] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 # \iram[2] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 $ \iram[3] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 % \iram[4] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 & \iram[5] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 ' \iram[6] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module fetch $end
$var reg 32 ( \iram[7] [0:31] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 ) \register_array[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 * \register_array[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 + \register_array[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 , \register_array[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 - \register_array[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 . \register_array[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 / \register_array[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 0 \register_array[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 1 \register_array[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 2 \register_array[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 3 \register_array[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 4 \register_array[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 5 \register_array[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 6 \register_array[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 7 \register_array[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 8 \register_array[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 9 \register_array[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 : \register_array[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 ; \register_array[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 < \register_array[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 = \register_array[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 > \register_array[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 ? \register_array[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 @ \register_array[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 A \register_array[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 B \register_array[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 C \register_array[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 D \register_array[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 E \register_array[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 F \register_array[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 G \register_array[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$scope module mips $end
$scope module decode $end
$var reg 32 H \register_array[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module mips_tb $end
$var reg 1 I clock $end
$var reg 1 J reset $end
$var integer 32 K i [31:0] $end
$scope module mips $end
$var wire 1 I clock $end
$var wire 1 J reset $end
$var wire 5 L wreg_rt [4:0] $end
$var wire 5 M wreg_rd [4:0] $end
$var wire 5 N wreg_address [4:0] $end
$var wire 32 O sign_extend [31:0] $end
$var wire 1 P regwrite $end
$var wire 32 Q register_rt [31:0] $end
$var wire 32 R register_rs [31:0] $end
$var wire 1 S regdst $end
$var wire 32 T read_data [31:0] $end
$var wire 32 U pc4 [31:0] $end
$var wire 1 V memwrite $end
$var wire 1 W memtoreg $end
$var wire 1 X memread $end
$var wire 1 Y jump $end
$var wire 32 Z instruction [31:0] $end
$var wire 1 [ do_branch $end
$var wire 32 \ branch_addr [31:0] $end
$var wire 1 ] branch $end
$var wire 1 ^ alusrc $end
$var wire 2 _ aluop [1:0] $end
$var wire 32 ` alu_result [31:0] $end
$scope module control $end
$var wire 1 ^ alusrc $end
$var wire 1 ] branch $end
$var wire 1 Y jump $end
$var wire 1 X memread $end
$var wire 1 W memtoreg $end
$var wire 1 V memwrite $end
$var wire 6 a opcode [5:0] $end
$var wire 1 S regdst $end
$var wire 1 P regwrite $end
$var wire 1 b sw $end
$var wire 1 c rformat $end
$var wire 1 d ori $end
$var wire 1 e lw $end
$var wire 1 f lui $end
$var wire 1 g jal $end
$var wire 1 h j $end
$var wire 1 i beq $end
$var wire 2 j aluop [1:0] $end
$upscope $end
$scope module decode $end
$var wire 1 I clock $end
$var wire 1 W memtoreg $end
$var wire 32 k register_rs [31:0] $end
$var wire 32 l register_rt [31:0] $end
$var wire 1 P regwrite $end
$var wire 1 J reset $end
$var wire 32 m write_data [31:0] $end
$var wire 5 n wreg_rt [4:0] $end
$var wire 5 o wreg_rd [4:0] $end
$var wire 5 p wreg_address [4:0] $end
$var wire 32 q sign_extend [31:0] $end
$var wire 5 r read_register_2_address [4:0] $end
$var wire 5 s read_register_1_address [4:0] $end
$var wire 32 t pc4 [31:0] $end
$var wire 32 u memory_data [31:0] $end
$var wire 16 v instruction_immediate_value [15:0] $end
$var wire 32 w instruction [31:0] $end
$var wire 32 x alu_result [31:0] $end
$var integer 32 y i [31:0] $end
$upscope $end
$scope module execute $end
$var wire 32 z ainput [31:0] $end
$var wire 2 { aluop [1:0] $end
$var wire 1 ^ alusrc $end
$var wire 1 ] branch $end
$var wire 1 [ do_branch $end
$var wire 6 | function_opcode [5:0] $end
$var wire 6 } opcode [5:0] $end
$var wire 1 S regdst $end
$var wire 32 ~ register_rs [31:0] $end
$var wire 32 !" register_rt [31:0] $end
$var wire 32 "" sign_extend [31:0] $end
$var wire 5 #" wreg_rd [4:0] $end
$var wire 5 $" wreg_rt [4:0] $end
$var wire 1 %" zero $end
$var wire 5 &" wreg_address [4:0] $end
$var wire 32 '" pc4 [31:0] $end
$var wire 32 (" branch_addr [31:0] $end
$var wire 32 )" binput [31:0] $end
$var reg 3 *" alu_ctl [2:0] $end
$var reg 32 +" alu_result [31:0] $end
$upscope $end
$scope module fetch $end
$var wire 32 ," branch_addr [31:0] $end
$var wire 1 I clock $end
$var wire 1 [ do_branch $end
$var wire 32 -" instruction [31:0] $end
$var wire 1 Y jump $end
$var wire 1 J reset $end
$var wire 32 ." pc4 [31:0] $end
$var wire 32 /" next_pc [31:0] $end
$var reg 32 0" pc [31:0] $end
$upscope $end
$scope module memory $end
$var wire 32 1" address [31:0] $end
$var wire 1 I clock $end
$var wire 1 V memwrite $end
$var wire 32 2" write_data [31:0] $end
$var wire 32 3" read_data [31:0] $end
$var integer 32 4" i [31:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk2[2] $end
$upscope $end
$scope begin genblk2[3] $end
$upscope $end
$scope begin genblk2[4] $end
$upscope $end
$scope begin genblk2[5] $end
$upscope $end
$scope begin genblk2[6] $end
$upscope $end
$scope begin genblk2[7] $end
$upscope $end
$scope begin genblk2[8] $end
$upscope $end
$scope begin genblk2[9] $end
$upscope $end
$scope begin genblk2[10] $end
$upscope $end
$scope begin genblk2[11] $end
$upscope $end
$scope begin genblk2[12] $end
$upscope $end
$scope begin genblk2[13] $end
$upscope $end
$scope begin genblk2[14] $end
$upscope $end
$scope begin genblk2[15] $end
$upscope $end
$scope begin genblk2[16] $end
$upscope $end
$scope begin genblk2[17] $end
$upscope $end
$scope begin genblk2[18] $end
$upscope $end
$scope begin genblk2[19] $end
$upscope $end
$scope begin genblk2[20] $end
$upscope $end
$scope begin genblk2[21] $end
$upscope $end
$scope begin genblk2[22] $end
$upscope $end
$scope begin genblk2[23] $end
$upscope $end
$scope begin genblk2[24] $end
$upscope $end
$scope begin genblk2[25] $end
$upscope $end
$scope begin genblk2[26] $end
$upscope $end
$scope begin genblk2[27] $end
$upscope $end
$scope begin genblk2[28] $end
$upscope $end
$scope begin genblk2[29] $end
$upscope $end
$scope begin genblk2[30] $end
$upscope $end
$scope begin genblk2[31] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
x%"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
b100000 y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
xi
xh
xg
xf
xe
xd
xc
xb
bx a
bx `
bx _
x^
x]
bx \
x[
bx Z
xY
xX
xW
xV
bx U
bx T
xS
bx R
bx Q
xP
bx O
bx N
bx M
bx L
b100000 K
1J
0I
b11111 H
b11110 G
b11101 F
b11100 E
b11011 D
b11010 C
b11001 B
b11000 A
b10111 @
b10110 ?
b10101 >
b10100 =
b10011 <
b10010 ;
b10001 :
b10000 9
b1111 8
b1110 7
b1101 6
b1100 5
b1011 4
b1010 3
b1001 2
b1000 1
b111 0
b110 /
b101 .
b100 -
b11 ,
b10 +
b1 *
b0 )
b1000000000000000000000000010 (
b101000010010100000100101 '
b110101011010100001001000110100 &
b101000110010000000101010 %
b111100000010000000000000001010 $
b100000110010100000100000 #
b10001100000001000000000000000000 "
b10101100000000110000000000000000 !
$end
#1
b0 T
b0 u
b0 3"
b0 m
1%"
b0 `
b0 x
b0 +"
b0 1"
0P
1^
b100 /"
b100 \
b100 ("
b100 ,"
0[
0Y
b11 N
b11 p
b11 &"
b0 )"
b10 *"
0S
0c
0X
0W
0e
1V
1b
b0 _
b0 j
b0 {
0]
0i
0f
0d
0h
0g
b11 L
b11 n
b11 $"
b0 M
b0 o
b0 #"
b0 O
b0 q
b0 ""
b0 v
b11 Q
b11 l
b11 !"
b11 2"
b11 r
b0 z
b0 R
b0 k
b0 ~
b0 s
b101011 }
b0 |
b101011 a
b10101100000000110000000000000000 Z
b10101100000000110000000000000000 w
b10101100000000110000000000000000 -"
b100 U
b100 t
b100 '"
b100 ."
b0 0"
1I
#2
0I
0J
#3
1P
b11 m
b100 N
b100 p
b100 &"
1X
1W
1e
0V
0b
b100 L
b100 n
b100 $"
b100 Q
b100 l
b100 !"
b100 2"
b100 r
b100011 }
b100011 a
b1000 /"
b11 T
b11 u
b11 3"
b10001100000001000000000000000000 Z
b10001100000001000000000000000000 w
b10001100000001000000000000000000 -"
b1000 \
b1000 ("
b1000 ,"
b1000 U
b1000 t
b1000 '"
b1000 ."
b100 0"
1I
#4
0I
#5
b0 T
b0 u
b0 3"
b110 m
0^
0%"
b101 N
b101 p
b101 &"
b11 )"
b110 `
b110 x
b110 +"
b110 1"
b10 _
b10 j
b10 {
1S
1c
0X
0W
0e
b11 L
b11 n
b11 $"
b101 M
b101 o
b101 #"
b10100000100000 O
b10100000100000 q
b10100000100000 ""
b10100000100000 v
b11 r
b11 z
b11 R
b11 k
b11 ~
b100 s
b0 }
b100000 |
b0 a
b1100 /"
b100000110010100000100000 Z
b100000110010100000100000 w
b100000110010100000100000 -"
b1010000010001100 \
b1010000010001100 ("
b1010000010001100 ,"
b1100 U
b1100 t
b1100 '"
b1100 ."
b1000 0"
b11 -
b11 Q
b11 l
b11 !"
b11 2"
1I
#6
0I
#7
b11 T
b11 u
b11 3"
b10100000000000000000 m
1^
b1000 N
b1000 p
b1000 &"
b1010 )"
b10100000000000000000 `
b10100000000000000000 x
b10100000000000000000 +"
b10100000000000000000 1"
b101 *"
b0 _
b0 j
b0 {
0S
0c
1f
b1000 L
b1000 n
b1000 $"
b0 M
b0 o
b0 #"
b1010 O
b1010 q
b1010 ""
b1010 v
b1000 Q
b1000 l
b1000 !"
b1000 2"
b1000 r
b0 z
b0 R
b0 k
b0 ~
b0 s
b1111 }
b1010 |
b1111 a
b10000 /"
b111100000010000000000000001010 Z
b111100000010000000000000001010 w
b111100000010000000000000001010 -"
b110 .
b111000 \
b111000 ("
b111000 ,"
b10000 U
b10000 t
b10000 '"
b10000 ."
b1100 0"
1I
#8
0I
#9
1%"
b0 m
1P
0^
b100 N
b100 p
b100 &"
b11 )"
b0 `
b0 x
b0 +"
b0 1"
b111 *"
b10 _
b10 j
b10 {
1S
1c
0f
b11 L
b11 n
b11 $"
b100 M
b100 o
b100 #"
b10000000101010 O
b10000000101010 q
b10000000101010 ""
b10000000101010 v
b11 r
b110 z
b110 R
b110 k
b110 ~
b101 s
b0 }
b101010 |
b0 a
b10100 /"
b101000110010000000101010 Z
b101000110010000000101010 w
b101000110010000000101010 -"
b1000000010111100 \
b1000000010111100 ("
b1000000010111100 ,"
b10100 U
b10100 t
b10100 '"
b10100 ."
b10000 0"
b10100000000000000000 1
b11 Q
b11 l
b11 !"
b11 2"
1I
#10
0I
#11
b0 T
b0 u
b0 3"
b1001000111111 m
0%"
1^
b1010 N
b1010 p
b1010 &"
b1001000110100 )"
b1001000111111 `
b1001000111111 x
b1001000111111 +"
b1001000111111 1"
b11 *"
b0 _
b0 j
b0 {
0S
0c
1d
b1010 L
b1010 n
b1010 $"
b10 M
b10 o
b10 #"
b1001000110100 O
b1001000110100 q
b1001000110100 ""
b1001000110100 v
b1010 Q
b1010 l
b1010 !"
b1010 2"
b1010 r
b1011 z
b1011 R
b1011 k
b1011 ~
b1011 s
b1101 }
b110100 |
b1101 a
b11000 /"
b110101011010100001001000110100 Z
b110101011010100001001000110100 w
b110101011010100001001000110100 -"
b0 -
b100100011101000 \
b100100011101000 ("
b100100011101000 ,"
b11000 U
b11000 t
b11000 '"
b11000 ."
b10100 0"
1I
#12
0I
#13
1P
b111 m
0^
b101 N
b101 p
b101 &"
b1 )"
b111 `
b111 x
b111 +"
b111 1"
b1 *"
b10 _
b10 j
b10 {
1S
1c
0d
b1 L
b1 n
b1 $"
b101 M
b101 o
b101 #"
b10100000100101 O
b10100000100101 q
b10100000100101 ""
b10100000100101 v
b1 r
b110 z
b110 R
b110 k
b110 ~
b101 s
b0 }
b100101 |
b0 a
b11100 /"
b101000010010100000100101 Z
b101000010010100000100101 w
b101000010010100000100101 -"
b1010000010110000 \
b1010000010110000 ("
b1010000010110000 ,"
b11100 U
b11100 t
b11100 '"
b11100 ."
b11000 0"
b1001000111111 3
b1 Q
b1 l
b1 !"
b1 2"
1I
#14
0I
#15
0P
1%"
b11 T
b11 u
b11 3"
b0 m
1Y
b0 N
b0 p
b0 &"
b0 )"
b0 `
b0 x
b0 +"
b0 1"
b10 *"
b0 _
b0 j
b0 {
0S
0c
1h
b0 L
b0 n
b0 $"
b0 M
b0 o
b0 #"
b10 O
b10 q
b10 ""
b10 v
b0 Q
b0 l
b0 !"
b0 2"
b0 r
b0 s
b10 }
b10 |
b10 a
b1000 /"
b1000000000000000000000000010 Z
b1000000000000000000000000010 w
b1000000000000000000000000010 -"
b111 .
b0 z
b0 R
b0 k
b0 ~
b101000 \
b101000 ("
b101000 ,"
b100000 U
b100000 t
b100000 '"
b100000 ."
b11100 0"
1I
#16
0I
#17
1P
b1100 /"
b11 m
0%"
0Y
b101 N
b101 p
b101 &"
b11 `
b11 x
b11 +"
b11 1"
b11 )"
b10 _
b10 j
b10 {
1S
1c
0h
b11 L
b11 n
b11 $"
b101 M
b101 o
b101 #"
b10100000100000 O
b10100000100000 q
b10100000100000 ""
b10100000100000 v
b11 Q
b11 l
b11 !"
b11 2"
b11 r
b100 s
b0 }
b100000 |
b0 a
b100000110010100000100000 Z
b100000110010100000100000 w
b100000110010100000100000 -"
b1010000010001100 \
b1010000010001100 ("
b1010000010001100 ,"
b1100 U
b1100 t
b1100 '"
b1100 ."
b1000 0"
1I
#18
0I
#19
b10100000000000000000 m
1^
b1000 N
b1000 p
b1000 &"
b10100000000000000000 `
b10100000000000000000 x
b10100000000000000000 +"
b10100000000000000000 1"
b1010 )"
b101 *"
b0 _
b0 j
b0 {
0S
0c
1f
b1000 L
b1000 n
b1000 $"
b0 M
b0 o
b0 #"
b1010 O
b1010 q
b1010 ""
b1010 v
b10100000000000000000 Q
b10100000000000000000 l
b10100000000000000000 !"
b10100000000000000000 2"
b1000 r
b0 s
b1111 }
b1010 |
b1111 a
b10000 /"
b111100000010000000000000001010 Z
b111100000010000000000000001010 w
b111100000010000000000000001010 -"
b11 .
b111000 \
b111000 ("
b111000 ,"
b10000 U
b10000 t
b10000 '"
b10000 ."
b1100 0"
1I
#20
0I
#21
1%"
b0 m
1P
0^
b100 N
b100 p
b100 &"
b11 )"
b0 `
b0 x
b0 +"
b0 1"
b111 *"
b10 _
b10 j
b10 {
1S
1c
0f
b11 L
b11 n
b11 $"
b100 M
b100 o
b100 #"
b10000000101010 O
b10000000101010 q
b10000000101010 ""
b10000000101010 v
b11 Q
b11 l
b11 !"
b11 2"
b11 r
b11 z
b11 R
b11 k
b11 ~
b101 s
b0 }
b101010 |
b0 a
b10100 /"
b101000110010000000101010 Z
b101000110010000000101010 w
b101000110010000000101010 -"
b1000000010111100 \
b1000000010111100 ("
b1000000010111100 ,"
b10100 U
b10100 t
b10100 '"
b10100 ."
b10000 0"
b10100000000000000000 1
1I
#22
0I
#23
b0 T
b0 u
b0 3"
b1001000111111 m
0%"
1^
b1010 N
b1010 p
b1010 &"
b1001000110100 )"
b1001000111111 `
b1001000111111 x
b1001000111111 +"
b1001000111111 1"
b11 *"
b0 _
b0 j
b0 {
0S
0c
1d
b1010 L
b1010 n
b1010 $"
b10 M
b10 o
b10 #"
b1001000110100 O
b1001000110100 q
b1001000110100 ""
b1001000110100 v
b1001000111111 Q
b1001000111111 l
b1001000111111 !"
b1001000111111 2"
b1010 r
b1011 z
b1011 R
b1011 k
b1011 ~
b1011 s
b1101 }
b110100 |
b1101 a
b11000 /"
b110101011010100001001000110100 Z
b110101011010100001001000110100 w
b110101011010100001001000110100 -"
b0 -
b100100011101000 \
b100100011101000 ("
b100100011101000 ,"
b11000 U
b11000 t
b11000 '"
b11000 ."
b10100 0"
1I
#24
0I
#25
b11 T
b11 u
b11 3"
1P
b11 m
0^
b101 N
b101 p
b101 &"
b1 )"
b11 `
b11 x
b11 +"
b11 1"
b1 *"
b10 _
b10 j
b10 {
1S
1c
0d
b1 L
b1 n
b1 $"
b101 M
b101 o
b101 #"
b10100000100101 O
b10100000100101 q
b10100000100101 ""
b10100000100101 v
b1 Q
b1 l
b1 !"
b1 2"
b1 r
b11 z
b11 R
b11 k
b11 ~
b101 s
b0 }
b100101 |
b0 a
b11100 /"
b101000010010100000100101 Z
b101000010010100000100101 w
b101000010010100000100101 -"
b1010000010110000 \
b1010000010110000 ("
b1010000010110000 ,"
b11100 U
b11100 t
b11100 '"
b11100 ."
b11000 0"
b1001000111111 3
1I
#26
0I
#27
0P
1%"
b0 m
1Y
b0 N
b0 p
b0 &"
b0 )"
b0 `
b0 x
b0 +"
b0 1"
b10 *"
b0 _
b0 j
b0 {
0S
0c
1h
b0 L
b0 n
b0 $"
b0 M
b0 o
b0 #"
b10 O
b10 q
b10 ""
b10 v
b0 Q
b0 l
b0 !"
b0 2"
b0 r
b0 z
b0 R
b0 k
b0 ~
b0 s
b10 }
b10 |
b10 a
b1000 /"
b1000000000000000000000000010 Z
b1000000000000000000000000010 w
b1000000000000000000000000010 -"
b11 .
b101000 \
b101000 ("
b101000 ,"
b100000 U
b100000 t
b100000 '"
b100000 ."
b11100 0"
1I
#28
0I
#29
1P
b1100 /"
b11 m
0%"
0Y
b101 N
b101 p
b101 &"
b11 `
b11 x
b11 +"
b11 1"
b11 )"
b10 _
b10 j
b10 {
1S
1c
0h
b11 L
b11 n
b11 $"
b101 M
b101 o
b101 #"
b10100000100000 O
b10100000100000 q
b10100000100000 ""
b10100000100000 v
b11 Q
b11 l
b11 !"
b11 2"
b11 r
b100 s
b0 }
b100000 |
b0 a
b100000110010100000100000 Z
b100000110010100000100000 w
b100000110010100000100000 -"
b1010000010001100 \
b1010000010001100 ("
b1010000010001100 ,"
b1100 U
b1100 t
b1100 '"
b1100 ."
b1000 0"
1I
#30
0I
#31
b10100000000000000000 m
1^
b1000 N
b1000 p
b1000 &"
b10100000000000000000 `
b10100000000000000000 x
b10100000000000000000 +"
b10100000000000000000 1"
b1010 )"
b101 *"
b0 _
b0 j
b0 {
0S
0c
1f
b1000 L
b1000 n
b1000 $"
b0 M
b0 o
b0 #"
b1010 O
b1010 q
b1010 ""
b1010 v
b10100000000000000000 Q
b10100000000000000000 l
b10100000000000000000 !"
b10100000000000000000 2"
b1000 r
b0 s
b1111 }
b1010 |
b1111 a
b10000 /"
b111100000010000000000000001010 Z
b111100000010000000000000001010 w
b111100000010000000000000001010 -"
b11 .
b111000 \
b111000 ("
b111000 ,"
b10000 U
b10000 t
b10000 '"
b10000 ."
b1100 0"
1I
#32
0I
#33
1%"
b0 m
1P
0^
b100 N
b100 p
b100 &"
b11 )"
b0 `
b0 x
b0 +"
b0 1"
b111 *"
b10 _
b10 j
b10 {
1S
1c
0f
b11 L
b11 n
b11 $"
b100 M
b100 o
b100 #"
b10000000101010 O
b10000000101010 q
b10000000101010 ""
b10000000101010 v
b11 Q
b11 l
b11 !"
b11 2"
b11 r
b11 z
b11 R
b11 k
b11 ~
b101 s
b0 }
b101010 |
b0 a
b10100 /"
b101000110010000000101010 Z
b101000110010000000101010 w
b101000110010000000101010 -"
b1000000010111100 \
b1000000010111100 ("
b1000000010111100 ,"
b10100 U
b10100 t
b10100 '"
b10100 ."
b10000 0"
b10100000000000000000 1
1I
#34
0I
#35
b0 T
b0 u
b0 3"
b1001000111111 m
0%"
1^
b1010 N
b1010 p
b1010 &"
b1001000110100 )"
b1001000111111 `
b1001000111111 x
b1001000111111 +"
b1001000111111 1"
b11 *"
b0 _
b0 j
b0 {
0S
0c
1d
b1010 L
b1010 n
b1010 $"
b10 M
b10 o
b10 #"
b1001000110100 O
b1001000110100 q
b1001000110100 ""
b1001000110100 v
b1001000111111 Q
b1001000111111 l
b1001000111111 !"
b1001000111111 2"
b1010 r
b1011 z
b1011 R
b1011 k
b1011 ~
b1011 s
b1101 }
b110100 |
b1101 a
b11000 /"
b110101011010100001001000110100 Z
b110101011010100001001000110100 w
b110101011010100001001000110100 -"
b0 -
b100100011101000 \
b100100011101000 ("
b100100011101000 ,"
b11000 U
b11000 t
b11000 '"
b11000 ."
b10100 0"
1I
#36
0I
#37
b11 T
b11 u
b11 3"
1P
b11 m
0^
b101 N
b101 p
b101 &"
b1 )"
b11 `
b11 x
b11 +"
b11 1"
b1 *"
b10 _
b10 j
b10 {
1S
1c
0d
b1 L
b1 n
b1 $"
b101 M
b101 o
b101 #"
b10100000100101 O
b10100000100101 q
b10100000100101 ""
b10100000100101 v
b1 Q
b1 l
b1 !"
b1 2"
b1 r
b11 z
b11 R
b11 k
b11 ~
b101 s
b0 }
b100101 |
b0 a
b11100 /"
b101000010010100000100101 Z
b101000010010100000100101 w
b101000010010100000100101 -"
b1010000010110000 \
b1010000010110000 ("
b1010000010110000 ,"
b11100 U
b11100 t
b11100 '"
b11100 ."
b11000 0"
b1001000111111 3
1I
#38
0I
#39
0P
1%"
b0 m
1Y
b0 N
b0 p
b0 &"
b0 )"
b0 `
b0 x
b0 +"
b0 1"
b10 *"
b0 _
b0 j
b0 {
0S
0c
1h
b0 L
b0 n
b0 $"
b0 M
b0 o
b0 #"
b10 O
b10 q
b10 ""
b10 v
b0 Q
b0 l
b0 !"
b0 2"
b0 r
b0 z
b0 R
b0 k
b0 ~
b0 s
b10 }
b10 |
b10 a
b1000 /"
b1000000000000000000000000010 Z
b1000000000000000000000000010 w
b1000000000000000000000000010 -"
b11 .
b101000 \
b101000 ("
b101000 ,"
b100000 U
b100000 t
b100000 '"
b100000 ."
b11100 0"
1I
#40
0I
#41
1P
b1100 /"
b11 m
0%"
0Y
b101 N
b101 p
b101 &"
b11 `
b11 x
b11 +"
b11 1"
b11 )"
b10 _
b10 j
b10 {
1S
1c
0h
b11 L
b11 n
b11 $"
b101 M
b101 o
b101 #"
b10100000100000 O
b10100000100000 q
b10100000100000 ""
b10100000100000 v
b11 Q
b11 l
b11 !"
b11 2"
b11 r
b100 s
b0 }
b100000 |
b0 a
b100000110010100000100000 Z
b100000110010100000100000 w
b100000110010100000100000 -"
b1010000010001100 \
b1010000010001100 ("
b1010000010001100 ,"
b1100 U
b1100 t
b1100 '"
b1100 ."
b1000 0"
1I
#42
0I
#43
b10100000000000000000 m
1^
b1000 N
b1000 p
b1000 &"
b10100000000000000000 `
b10100000000000000000 x
b10100000000000000000 +"
b10100000000000000000 1"
b1010 )"
b101 *"
b0 _
b0 j
b0 {
0S
0c
1f
b1000 L
b1000 n
b1000 $"
b0 M
b0 o
b0 #"
b1010 O
b1010 q
b1010 ""
b1010 v
b10100000000000000000 Q
b10100000000000000000 l
b10100000000000000000 !"
b10100000000000000000 2"
b1000 r
b0 s
b1111 }
b1010 |
b1111 a
b10000 /"
b111100000010000000000000001010 Z
b111100000010000000000000001010 w
b111100000010000000000000001010 -"
b11 .
b111000 \
b111000 ("
b111000 ,"
b10000 U
b10000 t
b10000 '"
b10000 ."
b1100 0"
1I
#44
0I
#45
1%"
b0 m
1P
0^
b100 N
b100 p
b100 &"
b11 )"
b0 `
b0 x
b0 +"
b0 1"
b111 *"
b10 _
b10 j
b10 {
1S
1c
0f
b11 L
b11 n
b11 $"
b100 M
b100 o
b100 #"
b10000000101010 O
b10000000101010 q
b10000000101010 ""
b10000000101010 v
b11 Q
b11 l
b11 !"
b11 2"
b11 r
b11 z
b11 R
b11 k
b11 ~
b101 s
b0 }
b101010 |
b0 a
b10100 /"
b101000110010000000101010 Z
b101000110010000000101010 w
b101000110010000000101010 -"
b1000000010111100 \
b1000000010111100 ("
b1000000010111100 ,"
b10100 U
b10100 t
b10100 '"
b10100 ."
b10000 0"
b10100000000000000000 1
1I
#46
0I
#47
b0 T
b0 u
b0 3"
b1001000111111 m
0%"
1^
b1010 N
b1010 p
b1010 &"
b1001000110100 )"
b1001000111111 `
b1001000111111 x
b1001000111111 +"
b1001000111111 1"
b11 *"
b0 _
b0 j
b0 {
0S
0c
1d
b1010 L
b1010 n
b1010 $"
b10 M
b10 o
b10 #"
b1001000110100 O
b1001000110100 q
b1001000110100 ""
b1001000110100 v
b1001000111111 Q
b1001000111111 l
b1001000111111 !"
b1001000111111 2"
b1010 r
b1011 z
b1011 R
b1011 k
b1011 ~
b1011 s
b1101 }
b110100 |
b1101 a
b11000 /"
b110101011010100001001000110100 Z
b110101011010100001001000110100 w
b110101011010100001001000110100 -"
b0 -
b100100011101000 \
b100100011101000 ("
b100100011101000 ,"
b11000 U
b11000 t
b11000 '"
b11000 ."
b10100 0"
1I
#48
0I
#49
b11 T
b11 u
b11 3"
1P
b11 m
0^
b101 N
b101 p
b101 &"
b1 )"
b11 `
b11 x
b11 +"
b11 1"
b1 *"
b10 _
b10 j
b10 {
1S
1c
0d
b1 L
b1 n
b1 $"
b101 M
b101 o
b101 #"
b10100000100101 O
b10100000100101 q
b10100000100101 ""
b10100000100101 v
b1 Q
b1 l
b1 !"
b1 2"
b1 r
b11 z
b11 R
b11 k
b11 ~
b101 s
b0 }
b100101 |
b0 a
b11100 /"
b101000010010100000100101 Z
b101000010010100000100101 w
b101000010010100000100101 -"
b1010000010110000 \
b1010000010110000 ("
b1010000010110000 ,"
b11100 U
b11100 t
b11100 '"
b11100 ."
b11000 0"
b1001000111111 3
1I
#50
0I
